@article{coqTarski,
   title={Formal proofs in real algebraic geometry: from ordered fields to quantifier elimination},
   volume={Volume 8, Issue 1},
   ISSN={1860-5974},
   url={http://dx.doi.org/10.2168/LMCS-8(1:2)2012},
   DOI={10.2168/lmcs-8(1:2)2012},
   journal={Logical Methods in Computer Science},
   publisher={Centre pour la Communication Scientifique Directe (CCSD)},
   author={Mahboubi, Assia and Cohen, Cyril},
   year={2012},
   month=feb }


@article{doublyExponential,
title = {Real quantifier elimination is doubly exponential},
journal = {Journal of Symbolic Computation},
volume = {5},
number = {1},
pages = {29-35},
year = {1988},
issn = {0747-7171},
doi = {https://doi.org/10.1016/S0747-7171(88)80004-X},
url = {https://www.sciencedirect.com/science/article/pii/S074771718880004X},
author = {James H. Davenport and Joos Heintz},
abstract = {We show that quantifier elimination over real closed fields can require doubly exponential space (and hence time). This is done by explicitly constructing a sequence of expressions whose length is linear in the number of quantifiers, but whose quantifier-free expression has length doubly exponential in the number of quantifiers. The results can be applied to cylindrical algebraic decomposition, showing that this can be doubly exponential. The double exponents of our lower bounds are about one fifth of the double exponents of the best-known upper bounds.}
}

@article{univCad,
  author    = {Wenda Li and Grant Olney Passmore and Lawrence C. Paulson},
  title     = {Deciding Univariate Polynomial Problems Using Untrusted Certificates in Isabelle/HOL},
  journal   = {Journal of Automated Reasoning},
  year      = {2019},
  volume    = {62},
  number    = {1},
  pages     = {69--91},
  doi       = {10.1007/s10817-017-9424-6},
  url       = {https://doi.org/10.1007/s10817-017-9424-6},
  abstract  = {We present a proof procedure for univariate real polynomial problems in Isabelle/HOL. The core mathematics of our procedure is based on univariate cylindrical algebraic decomposition. We follow the approach of untrusted certificates, separating solving from verifying: efficient external tools perform expensive real algebraic computations, producing evidence that is formally checked within Isabelle’s logic. This allows us to exploit highly-tuned computer algebra systems like Mathematica to guide our procedure without impacting the correctness of its results. We present experiments demonstrating the efficacy of this approach, in many cases yielding orders of magnitude improvements over previous methods.},
  issn      = {1573-0670}
}


@inproceedings{chaiebVS,
  title={Automated methods for formal proofs in simple arithmetics and algebra (Automatische Methoden f{\"u}r formale Beweise in einfachen Arithmetiken und Algebren)},
  author={Amine Chaieb},
  year={2008},
  url={https://api.semanticscholar.org/CorpusID:264039863}
}

@article{nipkowVS,
  author    = {Tobias Nipkow},
  title     = {Linear Quantifier Elimination},
  journal   = {Journal of Automated Reasoning},
  year      = {2010},
  volume    = {45},
  number    = {2},
  pages     = {189--212},
  doi       = {10.1007/s10817-010-9183-0},
  url       = {https://doi.org/10.1007/s10817-010-9183-0},
  abstract  = {This paper presents verified quantifier elimination procedures for dense linear orders (two of them novel), for real and for integer linear arithmetic. All procedures are defined and verified in the theorem prover Isabelle/HOL, are executable and can be applied to HOL formulae themselves (by reflection). The formalization of the different theories is highly modular.},
  issn      = {1573-0670}
}


@InProceedings{kosaian2,
author="Scharager, Matias
and Cordwell, Katherine
and Mitsch, Stefan
and Platzer, Andr{\'e}",
editor="Huisman, Marieke
and P{\u{a}}s{\u{a}}reanu, Corina
and Zhan, Naijun",
title="Verified Quadratic Virtual Substitution for Real Arithmetic",
booktitle="Formal Methods",
year="2021",
publisher="Springer International Publishing",
address="Cham",
pages="200--217",
abstract="This paper presents a formally verified quantifier elimination (QE) algorithm for first-order real arithmetic by linear and quadratic virtual substitution (VS) in Isabelle/HOL. The Tarski-Seidenberg theorem established that the first-order logic of real arithmetic is decidable by QE. However, in practice, QE algorithms are highly complicated and often combine multiple methods for performance. VS is a practically successful method for QE that targets formulas with low-degree polynomials. To our knowledge, this is the first work to formalize VS for quadratic real arithmetic including inequalities. The proofs necessitate various contributions to the existing multivariate polynomial libraries in Isabelle/HOL. Our framework is modularized and easily expandable (to facilitate integrating future optimizations), and could serve as a basis for developing practical general-purpose QE algorithms. Further, as our formalization is designed with practicality in mind, we export our development to SML and test the resulting code on 378 benchmarks from the literature, comparing to Redlog, Z3, Wolfram Engine, and SMT-RAT. This identified inconsistencies in some tools, underscoring the significance of a verified approach for the intricacies of real arithmetic.",
isbn="978-3-030-90870-6"
}


@inproceedings{kosaian1,
   title={A First Complete Algorithm for Real Quantifier Elimination in Isabelle/HOL},
   url={http://dx.doi.org/10.1145/3573105.3575672},
   DOI={10.1145/3573105.3575672},
   booktitle={Proceedings of the 12th ACM SIGPLAN International Conference on Certified Programs and Proofs},
   publisher={ACM},
   author={Kosaian, Katherine and Tan, Yong Kiam and Platzer, André},
   year={2023},
   month=jan, pages={211–224},
   collection={CPP ’23}
 }

@InProceedings{mcLaughlin,
author="McLaughlin, Sean
and Harrison, John",
editor="Nieuwenhuis, Robert",
title="A Proof-Producing Decision Procedure for Real Arithmetic",
booktitle="Automated Deduction -- CADE-20",
year="2005",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="295--314",
abstract="We present a fully proof-producing implementation of a quantifier elimination procedure for real closed fields. To our knowledge, this is the first generally useful proof-producing implementation of such an algorithm. While many problems within the domain are intractable, we demonstrate convincing examples of its value in interactive theorem proving.",
isbn="978-3-540-31864-4"
}


@inbook{cvc5,
author = {Barbosa, Haniel and Barrett, Clark and Brain, Martin and Kremer, Gereon and Lachnitt, Hanna and Mann, Makai and Mohamed, Abdalrhman and Mohamed, Mudathir and Niemetz, Aina and Nötzli, Andres and Ozdemir, Alex and Preiner, Mathias and Reynolds, Andrew and Sheng, Ying and Tinelli, Cesare and Zohar, Yoni},
year = {2022},
month = {01},
pages = {415-442},
title = {cvc5: A Versatile and Industrial-Strength SMT Solver},
isbn = {978-3-030-99523-2},
doi = {10.1007/978-3-030-99524-9_24}
}

@InProceedings{lean4,
author="Moura, Leonardo de
and Ullrich, Sebastian",
editor="Platzer, Andr{\'e}
and Sutcliffe, Geoff",
title="The Lean 4 Theorem Prover and Programming Language",
booktitle="Automated Deduction -- CADE 28",
year="2021",
publisher="Springer International Publishing",
address="Cham",
pages="625--635",
abstract="Lean 4 is a reimplementation of the Lean interactive theorem prover (ITP) in Lean itself. It addresses many shortcomings of the previous versions and contains many new features. Lean 4 is fully extensible: users can modify and extend the parser, elaborator, tactics, decision procedures, pretty printer, and code generator. The new system has a hygienic macro system custom-built for ITPs. It contains a new typeclass resolution procedure based on tabled resolution, addressing significant performance problems reported by the growing user base. Lean 4 is also an efficient functional programming language based on a novel programming paradigm called functional but in-place. Efficient code generation is crucial for Lean users because many write custom proof automation procedures in Lean itself.",
isbn="978-3-030-79876-5"
}


@misc{proofsCac,
      title={Proving UNSAT in SMT: The Case of Quantifier Free Non-Linear Real Arithmetic},
      author={Erika Abraham and James H. Davenport and Matthew England and Gereon Kremer},
      year={2021},
      eprint={2108.05320},
      archivePrefix={arXiv},
      primaryClass={cs.LO},
      url={https://arxiv.org/abs/2108.05320},
}

@inproceedings{sage,
author = {Szabó, Peter and Galanda, Jozef},
year = {2017},
month = {10},
pages = {1-4},
title = {Sage math for education and research},
doi = {10.1109/ICETA.2017.8102535}
}

@article{coverings,
title = {Deciding the consistency of non-linear real arithmetic constraints with a conflict driven search using cylindrical algebraic coverings},
journal = {Journal of Logical and Algebraic Methods in Programming},
volume = {119},
pages = {100633},
year = {2021},
issn = {2352-2208},
doi = {https://doi.org/10.1016/j.jlamp.2020.100633},
url = {https://www.sciencedirect.com/science/article/pii/S2352220820301188},
author = {Erika Ábrahám and James H. Davenport and Matthew England and Gereon Kremer},
keywords = {Satisfiability modulo theories, Non-linear real arithmetic, Cylindrical algebraic decomposition, Real polynomial systems},
abstract = {We present a new algorithm for determining the satisfiability of conjunctions of non-linear polynomial constraints over the reals, which can be used as a theory solver for satisfiability modulo theory (SMT) solving for non-linear real arithmetic. The algorithm is a variant of Cylindrical Algebraic Decomposition (CAD) adapted for satisfiability, where solution candidates (sample points) are constructed incrementally, either until a satisfying sample is found or sufficient samples have been sampled to conclude unsatisfiability. The choice of samples is guided by the input constraints and previous conflicts. The key idea behind our new approach is to start with a partial sample; demonstrate that it cannot be extended to a full sample; and from the reasons for that rule out a larger space around the partial sample, which build up incrementally into a cylindrical algebraic covering of the space. There are similarities with the incremental variant of CAD, the NLSAT method of Jovanović and de Moura, and the NuCAD algorithm of Brown; but we present worked examples and experimental results on a preliminary implementation to demonstrate the differences to these, and the benefits of the new approach.}
}

@InProceedings{flexibleProofs,
author="Barbosa, Haniel
and Reynolds, Andrew
and Kremer, Gereon
and Lachnitt, Hanna
and Niemetz, Aina
and N{\"o}tzli, Andres
and Ozdemir, Alex
and Preiner, Mathias
and Viswanathan, Arjun
and Viteri, Scott
and Zohar, Yoni
and Tinelli, Cesare
and Barrett, Clark",
editor="Blanchette, Jasmin
and Kov{\'a}cs, Laura
and Pattinson, Dirk",
title="Flexible Proof Production in an Industrial-Strength SMT Solver",
booktitle="Automated Reasoning",
year="2022",
publisher="Springer International Publishing",
address="Cham",
pages="15--35",
abstract="Proof production for SMT solvers is paramount to ensure their correctness independently from implementations, which are often prohibitively difficult to verify. Historically, however, SMT proof production has struggled with performance and coverage issues, resulting in the disabling of many crucial solving techniques and in coarse-grained (and thus hard to check) proofs. We present a flexible proof-production architecture designed to handle the complexity of versatile, industrial-strength SMT solvers and show how we leverage it to produce detailed proofs, including for components previously unsupported by any solver. The architecture allows proofs to be produced modularly, lazily, and with numerous safeguards for correctness. This architecture has been implemented in the state-of-the-art SMT solver cvc5. We evaluate its proofs for SMT-LIB benchmarks and show that the new architecture produces better coverage than previous approaches, has acceptable performance overhead, and supports detailed proofs for most solving components.",
isbn="978-3-031-10769-6"
}


@article{scholze,
author  = {Castelvecchi, Davide},
year    = {2021},
month   = {06},
pages   = {},
title   = {Mathematicians welcome computer-assisted proof in ``grand unification'' theory},
volume  = {595},
journal = {Nature},
doi     = {10.1038/d41586-021-01627-2}
}


@InProceedings{fctCoq,
author="Gonthier, Georges",
editor="Kapur, Deepak",
title="The Four Colour Theorem: Engineering of a Formal Proof",
booktitle="Computer Mathematics",
year="2008",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="333--333",
abstract="The 150 year old Four Colour Theorem is the first famous result with a proof that requires large computer calculations. Such proofs are still controversial: It is thought that computer programs cannot be reviewed with mathematical rigor.",
isbn="978-3-540-87827-8"
}


@article{col75,
  title={Quantifier elimination for real closed fields by cylindrical algebraic decomposition},
  author={George E. Collins},
  journal={Lecture Notes in Computer Science},
  year={1975},
  url={https://api.semanticscholar.org/CorpusID:120235755}
}

@article{generatingProofs,
author = {Barbosa, Haniel and Barrett, Clark and Cook, Byron and Dutertre, Bruno and Kremer, Gereon and Lachnitt, Hanna and Niemetz, Aina and N\"{o}tzli, Andres and Ozdemir, Alex and Preiner, Mathias and Reynolds, Andrew and Tinelli, Cesare and Zohar, Yoni},
title = {Generating and Exploiting Automated Reasoning Proof Certificates},
year = {2023},
issue_date = {October 2023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {66},
number = {10},
issn = {0001-0782},
url = {https://doi.org/10.1145/3587692},
doi = {10.1145/3587692},
abstract = {Moving toward a full suite of proof-producing automated reasoning tools with SMT solvers that can produce full, independently checkable proofs for real-world problems.},
journal = {Commun. ACM},
month = sep,
pages = {86–95},
numpages = {10}
}

@inbook{integerUndec,
author = { Ju. V.   MATIJASEVI\v{C} },
title = {ENUMERABLE SETS ARE DIOPHANTINE},
booktitle = {Mathematical Logic in the 20th Century},
chapter = {},
year = 1970,
pages = {269-273},
doi = {10.1142/9789812564894_0013},
URL = {https://www.worldscientific.com/doi/abs/10.1142/9789812564894_0013},
eprint = {https://www.worldscientific.com/doi/pdf/10.1142/9789812564894_0013},
abstract = { Abstract Hilbert's tenth problem has the following formulation (cf. [1]): Specify a procedure which in a finite number of steps enables one to determine whether or not a given diophantine equation with an arbitrary number of indeterminates and with rational integer coefficients has a solution in rational integers… }
}
}

@book{computerAlgebraBook,
author = {Basu, Saugata and Pollack, Richard and Roy, Marie-Fran\c{c}oise},
title = {Algorithms in Real Algebraic Geometry (Algorithms and Computation in Mathematics)},
year = {2006},
isbn = {3540330984},
publisher = {Springer-Verlag},
address = {Berlin, Heidelberg}
}

@article{Kha79,
  author    = {L. G. Khachiyan},
  title     = {A polynomial algorithm in linear programming},
  journal   = {Dokl. Akad. Nauk SSSR},
  year      = {1979},
  volume    = {244},
  number    = {5},
  pages     = {1093--1096},
  url       = {http://mi.mathnet.ru/dan42319},
  note      = {MathSciNet: \url{http://mathscinet.ams.org/mathscinet-getitem?mr=0522052}, Zbl: \url{https://zbmath.org/?q=an:0414.90086}}
}

@incollection{Kar72,
  added-at = {2006-11-06T22:06:28.000+0100},
  author = {Karp, R.},
  biburl = {https://www.bibsonomy.org/bibtex/21fa7a672ce72ed916311dc52e5a93038/lysander07},
  booktitle = {Complexity of Computer Computations},
  editor = {Miller, R. and Thatcher, J.},
  interhash = {427e5bfc8069f94f57c5d43b6fd85949},
  intrahash = {1fa7a672ce72ed916311dc52e5a93038},
  keywords = {imported XMLTage2006-2},
  pages = {85--103},
  publisher = {Plenum Press},
  timestamp = {2009-01-27T15:24:50.000+0100},
  title = {Reducibility among combinatorial problems},
  year = 1972
}

@incollection{proofsInSmt,
   author = {Clark Barrett and Leonardo de Moura and Pascal Fontaine},
   editor = {David Delahaye and Woltzenlogel Paleo, Bruno},
   title = {Proofs in Satisfiability Modulo Theories},
   booktitle = {All about Proofs, Proofs for All},
   series = {Mathematical Logic and Foundations},
   volume = {55},
   pages = {23--44},
   publisher = {College Publications},
   address = {London, UK},
   month = jan,
   year = {2015},
   isbn = {978-1-84890-166-7},
   url = {http://theory.stanford.edu/~barrett/pubs/BdMF15.pdf}
}

@InProceedings{isabelle_smt,
author="Fontaine, Pascal
and Marion, Jean-Yves
and Merz, Stephan
and Nieto, Leonor Prensa
and Tiu, Alwen",
editor="Hermanns, Holger
and Palsberg, Jens",
title="Expressiveness + Automation + Soundness: Towards Combining SMT Solvers and Interactive Proof Assistants",
booktitle="Tools and Algorithms for the Construction and Analysis of Systems",
year="2006",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="167--181",
abstract="Formal system development needs expressive specification languages, but also calls for highly automated tools. These two goals are not easy to reconcile, especially if one also aims at high assurances for correctness. In this paper, we describe a combination of Isabelle/HOL with a proof-producing SMT (Satisfiability Modulo Theories) solver that contains a SAT engine and a decision procedure for quantifier-free first-order logic with equality. As a result, a user benefits from the expressiveness of Isabelle/HOL when modeling a system, but obtains much better automation for those fragments of the proofs that fall within the scope of the (automatic) SMT solver. Soundness is not compromised because all proofs are submitted to the trusted kernel of Isabelle for certification. This architecture is straightforward to extend for other interactive proof assistants and proof-producing reasoners.",
isbn="978-3-540-33057-8"
}

@TECHREPORT{smtlib,
  author =	 {Clark Barrett and Pascal Fontaine and Cesare Tinelli},
  title =	 {{The SMT-LIB Standard: Version 2.6}},
  institution =	 {Department of Computer Science, The University of Iowa},
  year =	 2017,
  note =	 {Available at {\tt www.SMT-LIB.org}}
}



@book{isabelle,
author = {Nipkow, Tobias and Wenzel, Markus and Paulson, Lawrence C.},
title = {Isabelle/HOL: A Proof Assistant for Higher-Order Logic},
year = {2002},
isbn = {3540433767},
publisher = {Springer-Verlag},
address = {Berlin, Heidelberg}
}


@Inbook{smtbook,
author="Barrett, Clark
and Tinelli, Cesare",
title="Satisfiability Modulo Theories",
bookTitle="Handbook of Model Checking",
year="2018",
publisher="Springer International Publishing",
address="Cham",
pages="305--343",
abstract="Satisfiability Modulo Theories (SMT) refers to the problem of determining whether a first-order formula is satisfiable with respect to some logical theory. Solvers based on SMT are used as back-end engines in model-checking applications such as bounded, interpolation-based, and predicate-abstraction-based model checking. After a brief illustration of these uses, we survey the predominant techniques for solving SMT problems with an emphasis on the lazy approach, in which a propositional satisfiability (SAT) solver is combined with one or more theory solvers. We discuss the architecture of a lazy SMT solver, give examples of theory solvers, show how to combine such solvers modularly, and mention several extensions of the lazy approach. We also briefly describe the eager approach in which the SMT problem is reduced to a SAT problem. Finally, we discuss how the basic framework for determining satisfiability can be extended with additional functionality such as producing models, proofs, unsatisfiable cores, and interpolants.",
isbn="978-3-319-10575-8",
doi="10.1007/978-3-319-10575-8_11",
url="https://doi.org/10.1007/978-3-319-10575-8_11"
}


@InProceedings{reconstruct,
author="Blanchette, Jasmin Christian
and B{\"o}hme, Sascha
and Paulson, Lawrence C.",
editor="Bj{\o}rner, Nikolaj
and Sofronie-Stokkermans, Viorica",
title="Extending Sledgehammer with SMT Solvers",
booktitle="Automated Deduction -- CADE-23",
year="2011",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="116--130",
abstract="Sledgehammer is a component of Isabelle/HOL that employs first-order automatic theorem provers (ATPs) to discharge goals arising in interactive proofs. It heuristically selects relevant facts and, if an ATP is successful, produces a snippet that replays the proof in Isabelle. We extended Sledgehammer to invoke satisfiability modulo theories (SMT) solvers as well, exploiting its relevance filter and parallel architecture. Isabelle users are now pleasantly surprised by SMT proofs for problems beyond the ATPs' reach. Remarkably, the best SMT solver performs better than the best ATP on most of our benchmarks.",
isbn="978-3-642-22438-6"
}

@article{nature,
 title = {Mathematicians welcome computer-assisted proof in ‘grand unification’ theory},
 volume = {595},
 copyright = {2021 Nature},
 url = {https://www.nature.com/articles/d41586-021-01627-2},
 doi = {10.1038/d41586-021-01627-2},
 abstract = {Proof-assistant software handles an abstract concept at the cutting edge of research, revealing a bigger role for software in mathematics.},
 language = {en},
 number = {7865},
 urldate = {2021-08-08},
 journal = {Nature},
 author = {Castelvecchi, Davide},
 month = jun,
 year = {2021},
 note = {Bandiera\_abtest: a
Cg\_type: News
Number: 7865
Publisher: Nature Publishing Group
Subject\_term: Mathematics and computing},
 pages = {18--19},
}

@article {
    lean,
    title = {The Lean theorem prover (system description)},
    author = {Leonardo de Moura and Soonho Kong and Jeremy Avigad and Floris Van Doorn and Jakob von Raumer},
    year = {2015},
    journal = {International Conference on Automated Deduction},
}

@InProceedings{coq1,
author="Armand, Michael
and Faure, Germain
and Gr{\'e}goire, Benjamin
and Keller, Chantal
and Th{\'e}ry, Laurent
and Werner, Benjamin",
editor="Jouannaud, Jean-Pierre
and Shao, Zhong",
title="A Modular Integration of SAT/SMT Solvers to Coq through Proof Witnesses",
booktitle="Certified Programs and Proofs",
year="2011",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="135--150",
abstract="We present a way to enjoy the power of SAT and SMT provers in Coq without compromising soundness. This requires these provers to return not only a yes/no answer, but also a proof witness that can be independently rechecked. We present such a checker, written and fully certified in Coq. It is conceived in a modular way, in order to tame the proofs' complexity and to be extendable. It can currently check witnesses from the SAT solver ZChaff and from the SMT solver veriT. Experiments highlight the efficiency of this checker. On top of it, new reflexive Coq tactics have been built that can decide a subset of Coq's logic by calling external provers and carefully checking their answers.",
isbn="978-3-642-25379-9"
}

@InProceedings{coq2,
author="Ekici, Burak
and Mebsout, Alain
and Tinelli, Cesare
and Keller, Chantal
and Katz, Guy
and Reynolds, Andrew
and Barrett, Clark",
editor="Majumdar, Rupak
and Kun{\v{c}}ak, Viktor",
title="SMTCoq: A Plug-In for Integrating SMT Solvers into Coq",
booktitle="Computer Aided Verification",
year="2017",
publisher="Springer International Publishing",
address="Cham",
pages="126--133",
abstract="This paper describes SMTCoq, a plug-in for the integration of external solvers into the Coq proof assistant. Based on a checker for generic first-order proof certificates fully implemented and proved correct in Coq, SMTCoq offers facilities to check answers from external SAT and SMT solvers and to increase Coq's automation using such solvers, all in a safe way. The current version supports proof certificates produced by the SAT solver ZChaff, for propositional logic, and the SMT solvers veriT and CVC4, for the quantifier-free fragment of the combined theory of fixed-size bit vectors, functional arrays with extensionality, linear integer arithmetic, and uninterpreted function symbols.",
isbn="978-3-319-63390-9"
}

@article{metaprog,
  author    = {Gabriel Ebner and
               Sebastian Ullrich and
               Jared Roesch and
               Jeremy Avigad and
               Leonardo de Moura},
  title     = {A metaprogramming framework for formal verification},
  journal   = {Proc. {ACM} Program. Lang.},
  volume    = {1},
  number    = {{ICFP}},
  pages     = {34:1--34:29},
  year      = {2017},
  url       = {https://doi.org/10.1145/3110278},
  doi       = {10.1145/3110278},
  timestamp = {Wed, 17 Feb 2021 08:53:58 +0100},
  biburl    = {https://dblp.org/rec/journals/pacmpl/EbnerURAM17.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{hammering, title={Hammering towards QED}, volume={9}, url={https://jfr.unibo.it/article/view/4593}, DOI={10.6092/issn.1972-5787/4593}, abstractNote={This paper surveys the emerging methods to automate reasoning over large libraries developed with formal proof assistants. We call these methods hammers. They give the authors of formal proofs a strong &amp;quot;one-stroke&amp;quot; tool for discharging difficult lemmas without the need for careful and detailed manual programming of proof search.The main ingredients underlying this approach are efficient automatic theorem provers that can cope with hundreds of axioms, suitable translations of richer logics to their formalisms, heuristic and learning methods that select relevant facts from large libraries, and methods that reconstruct the automatically found proofs inside the proof assistants.We outline the history of these methods, explain the main issues and techniques, and show their strength on several large benchmarks. We also discuss the relation of this technology to the QED Manifesto and consider its implications for QED-style efforts.}, number={1}, journal={Journal of Formalized Reasoning}, author={Blanchette, Jasmin C. and Kaliszyk, Cezary and Paulson, Lawrence C. and Urban, Josef}, year={2016}, month={Jan.}, pages={101–148} }

@article{cdcl_t,
author = {Nieuwenhuis, Robert and Oliveras, Albert and Tinelli, Cesare},
title = {Solving SAT and SAT Modulo Theories: From an Abstract Davis--Putnam--Logemann--Loveland Procedure to DPLL(T)},
year = {2006},
issue_date = {November 2006},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {53},
number = {6},
issn = {0004-5411},
url = {https://doi.org/10.1145/1217856.1217859},
doi = {10.1145/1217856.1217859},
abstract = {We first introduce Abstract DPLL, a rule-based formulation of the Davis--Putnam--Logemann--Loveland (DPLL) procedure for propositional satisfiability. This abstract framework allows one to cleanly express practical DPLL algorithms and to formally reason about them in a simple way. Its properties, such as soundness, completeness or termination, immediately carry over to the modern DPLL implementations with features such as backjumping or clause learning.We then extend the framework to Satisfiability Modulo background Theories (SMT) and use it to model several variants of the so-called lazy approach for SMT. In particular, we use it to introduce a few variants of a new, efficient and modular approach for SMT based on a general DPLL(X) engine, whose parameter X can be instantiated with a specialized solver SolverT for a given theory T, thus producing a DPLL(T) system. We describe the high-level design of DPLL(X) and its cooperation with SolverT, discuss the role of theory propagation, and describe different DPLL(T) strategies for some theories arising in industrial applications.Our extensive experimental evidence, summarized in this article, shows that DPLL(T) systems can significantly outperform the other state-of-the-art tools, frequently even in orders of magnitude, and have better scaling properties.},
journal = {J. ACM},
month = {nov},
pages = {937–977},
numpages = {41},
keywords = {Satisfiability Modulo Theories, SAT solvers}
}

@book{farkas_ref,
  added-at = {2012-11-22T19:17:38.000+0100},
  author = {Schrijver, A.},
  biburl = {https://www.bibsonomy.org/bibtex/2c05d22504b2f52da8a72d854b5043004/wvdaalst},
  interhash = {339112f38d5ae6dba33e4d7266d15b28},
  intrahash = {c05d22504b2f52da8a72d854b5043004},
  keywords = {BPM collection imported},
  publisher = {Wiley-Interscience},
  timestamp = {2012-11-22T19:22:37.000+0100},
  title = {{Theory of Linear and Integer programming}},
  year = 1986
}


@inproceedings{simplex_dpllt,
  title={Integrating Simplex with DPLL(T )},
  author={Bruno Dutertre and Leonardo Mendonça de Moura},
  year={2006}
}
